<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">


	<!-- 수동변환(PropertyPlaceHolderConfigurer)
		 아래 태그로 인해 자동으로 등록되는 PropertyPlaceHolderConfigurer 빈이 프로퍼티값을 치환시켜줌.
		 PropertyPlaceHolderConfigurer : bean factory 후처리기
		
		 주의) Bean Factory 후처리기(PropertyPlaceHolderConfigurer)에 의존하는 수동적인 방법이기 때문에, 치환이 
		       되지 않더라도 예외가 발생하지 않는다.
	-->
	<context:property-placeholder location="classpath:database.properties" />

	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${db.driverclass}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	
	<!--   능동변환(SpEL) 
	        - Spring Expression Language
	        - 다른 빈 오브젝트에 직접 접근할 수 있는 표현식을 이용해 원하는 프로퍼티 값을 능동적으로 가져오는 방법.
	        - Spring 3.0에서 소개된 스프링 전용 표현식 언어.
			
			- <util:properties> 는 <context:property-placeholder>처럼 빈 팩토리 후처리기로 동작해서 빈의 값을 변경하는 기능을 가지지 않음.
			- 단순 프로퍼티 파일을 읽어서 Properties 안에 담아 빈으로 생성.
			- Properties는 Map Interface 구현 클래스     
			- Map을 이용하기 때문에, 키 값이 잘못 적어도 예외가 발생하지 않고 무시될 수 있으니 주의해야 함.
	 -->

	<bean id="dataSource2" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<!-- Map에서 get가져오는 부분을 SpEL 표현으로 .. -->
		<property name="driverClass" value="#{dbprops['db.drvierclass']}" />
		<property name="url" value="#{dbprops['db.url']}" />
		<property name="username" value="#{dbprops['db.username']}" />
		<property name="password" value="#{dbprops['db.password']}" />
	</bean>
	
	 <util:properties id="dbprops" location="classpath:database.properties" />
	 
	 
</beans>
